{"version":3,"sources":["Page/Form.js","Page/Body.js","App.js","serviceWorker.js","index.js"],"names":["FormPage","props","Container","Row","style","marginTop","Col","lg","Form","Control","value","dataState","inputNama_karyawan","onChange","e","handleinput","type","placeholder","inputJabatan","inputJK","inputTgllahir","Button","onClick","simpanData","variant","Body","state","dataKaryawan","idInput","panggilSemua","bind","hapusData","clearInput","panggilById","id","fetch","then","response","json","hasil","setState","nama_karyawan","jabatan","jenis_kelamin","tanggal_lahir","this","alert","method","body","JSON","stringify","headers","result","target","Table","striped","bordered","hover","align","map","index","size","borderless","key","marginRight","width","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dbd3a049.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Container,Form,Button,\r\n        Col,\r\n      Row} from 'react-bootstrap';\r\n\r\nfunction FormPage(props){\r\n\r\n\r\n    return(\r\n      <Container>\r\n\r\n        <Row style={{marginTop:'30px'}}>\r\n        <h5><b><i>Form Tambah Data Karyawan :</i></b></h5>\r\n        </Row>\r\n        <Row style={{marginTop:'5px'}}>\r\n          <Col lg={3}>\r\n          <Form.Control value={props.dataState.inputNama_karyawan}\r\n          onChange ={(e)=>props.handleinput('inputNama_karyawan',e)}\r\n          type=\"text\" placeholder=\"Masukkan Nama Karyawan\" />\r\n          </Col>\r\n          <Col lg={3}>\r\n          <Form.Control value={props.dataState.inputJabatan}\r\n          onChange ={(e)=>props.handleinput('inputJabatan',e)}\r\n          type=\"text\" placeholder=\"Masukkan Jabatan\" />\r\n          </Col>\r\n          <Col lg={2}>\r\n          <Form.Control value={props.dataState.inputJK}\r\n          onChange ={(e)=>props.handleinput('inputJK',e)}\r\n          type=\"text\" placeholder=\"Jenis Kelamin\" />\r\n          </Col>\r\n          <Col lg={2}>\r\n          <Form.Control value={props.dataState.inputTgllahir}\r\n          onChange ={(e)=>props.handleinput('inputTgllahir',e)}\r\n          type=\"date\" />\r\n          </Col>\r\n          <Button onClick={()=>props.simpanData()}\r\n          variant=\"primary\">Simpan Data </Button>\r\n        </Row>\r\n        <Row>\r\n        <p></p>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n\r\nexport default FormPage;\r\n","import React, {Component} from 'react';\r\nimport FormPage from './Form';\r\nimport {Container, Table, Button, Row} from 'react-bootstrap';\r\n\r\nclass Body extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      dataKaryawan:[],\r\n      inputNama_karyawan:'',\r\n      inputJabatan:'',\r\n      inputJK:'',\r\n      inputTgllahir:'',\r\n      idInput:''\r\n    }\r\n    this.panggilSemua = this.panggilSemua.bind(this)\r\n    this.hapusData = this.hapusData.bind(this)\r\n    this.handleinput= this.handleinput.bind(this)\r\n    this.clearInput = this.clearInput.bind(this)\r\n    this.simpanData = this.simpanData.bind(this)\r\n    this.panggilById = this.panggilById.bind(this)\r\n  }\r\n\r\npanggilById(id){\r\n  fetch(`http://localhost:3000/data-karyawan/${id}`)\r\n    .then((response)=>response.json())\r\n    .then((hasil =>{\r\n      this.setState(\r\n        {\r\n          inputNama_karyawan:hasil.nama_karyawan,\r\n          inputJabatan:hasil.jabatan,\r\n          inputJK:hasil.jenis_kelamin,\r\n          inputTgllahir:hasil.tanggal_lahir,\r\n          idInput:hasil.id\r\n        }\r\n      )\r\n    }))\r\n}\r\n\r\nsimpanData(){\r\n  if(this.state.inputNama_karyawan === \"\" || this.state.inputJabatan ===\"\"|| this.state.inputJK === \"\" || this.state.inputTgllahir === \"\"){\r\n    alert (\"Silahkan Lengkapi Data Terlebih dahulu\")\r\n  }else if(this.state.idInput === \"\"){\r\n    fetch('http://localhost:3000/data-karyawan', {\r\n      method:'POST',\r\n      body:JSON.stringify({\r\n        nama_karyawan:this.state.inputNama_karyawan,\r\n        jabatan:this.state.inputJabatan,\r\n        jenis_kelamin:this.state.inputJK,\r\n        tanggal_lahir:this.state.inputTgllahir,\r\n      }),\r\n      headers:{\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      }).then((response)=>response.json())\r\n        .then((result =>{\r\n          alert(\"Data tersimpan\")\r\n          this.clearInput()\r\n        this.panggilSemua()\r\n      }))\r\n  }else{\r\n    fetch(`http://localhost:3000/data-karyawan/${this.state.idInput}`,{\r\n      method:'PUT',\r\n      body:JSON.stringify({\r\n        nama_karyawan:this.state.inputNama_karyawan,\r\n        jabatan:this.state.inputJabatan,\r\n        jenis_kelamin:this.state.inputJK,\r\n        tanggal_lahir:this.state.inputTgllahir,\r\n      }),\r\n      headers:{\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n      }).then((response)=>response.json())\r\n        .then((hasil =>{\r\n          this.panggilSemua();\r\n          this.clearInput();\r\n        }))\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nclearInput(){\r\n  this.setState(\r\n    {\r\n      inputNama_karyawan:'',\r\n      inputJabatan:'',\r\n      inputJK:'',\r\n      inputTgllahir:''\r\n    }\r\n  )\r\n}\r\n\r\nhandleinput(value, e){\r\n  this.setState({[value]: e.target.value})\r\n}\r\n\r\n\r\nhapusData(id){\r\n  fetch(`http://localhost:3000/data-karyawan/${id}`, {\r\n    method:'DELETE',\r\n  }).then((response =>{\r\n    alert('Data Telah Terhapus')\r\n    this.panggilSemua()\r\n  }))\r\n}\r\n\r\npanggilSemua(){\r\n  fetch('http://localhost:3000/data-karyawan/')\r\n  .then((response)=>response.json())\r\n  .then((hasil)=>this.setState({dataKaryawan:hasil}))\r\n}\r\n\r\ncomponentDidMount(){\r\nthis.panggilSemua()\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <Container >\r\n\r\n    <Table striped bordered hover variant=\"dark\">\r\n    <thead>\r\n    <tr align='center'>\r\n    <th><h3>DATA KARYAWAN</h3></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody></tbody>\r\n    </Table>\r\n\r\n    <FormPage\r\n    handleinput={this.handleinput}\r\n    dataState={this.state}\r\n    simpanData={this.simpanData}\r\n    />\r\n\r\n    {\r\n      this.state.dataKaryawan.map((value, index)=>{\r\n        return(\r\n          <Table size=\"sm\" borderless='true' key={index} >\r\n          <thead>\r\n          <tr>\r\n          <th></th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr><td><b>Nama:</b>{value.nama_karyawan}</td></tr>\r\n          <tr><td><b>Jabatan:</b>{value.jabatan}</td></tr>\r\n          <tr><td><b>Jenis Kelamin:</b>{value.jenis_kelamin}</td></tr>\r\n          <tr><td><b>Tanggal Lahir:</b>{value.tanggal_lahir}</td></tr>\r\n\r\n          <tr>\r\n          <td>\r\n          <Button onClick={()=>this.hapusData(value.id)} style={{marginRight:'5px'}} variant=\"danger\">Hapus Data</Button>\r\n          <Button onClick={()=>this.panggilById(value.id)} variant=\"warning\">Edit Data</Button>\r\n          </td>\r\n          </tr>\r\n          </tbody>\r\n          </Table>\r\n        )\r\n      })\r\n    }\r\n    <Row style={{width:'300px', marginTop:'30px'}}>\r\n\r\n\r\n    </Row>\r\n    </Container>\r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport './css/bootstrap.min.css';\nimport Body from './Page/Body';\n\nfunction App() {\n  return (\n    <div >\n    <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}